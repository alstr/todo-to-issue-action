diff --git a/ExampleFile.java b/ExampleFile.java
new file mode 100644
index 0000000..d340f6a
--- /dev/null
+++ b/ExampleFile.java
@@ -0,0 +1,13 @@
+package com.mydomain.myapp;
+
+public class JavaTests {
+    // TODO: Expand this class
+    //  Do it
+    // labels: urgent
+
+    /*
+    TODO: Definitely expand this class
+    Do it ASAP
+    labels: urgent
+    */
+}
\ No newline at end of file
diff --git a/example-file.php b/example-file.php
new file mode 100644
index 0000000..063bb80
--- /dev/null
+++ b/example-file.php
@@ -0,0 +1,23 @@
+<!DOCTYPE html>
+<html>
+<body>
+<!-- TODO: Check HTML comments work -->
+<?php
+    echo 'Testing 123';
+    // TODO: Expand this page
+    //  We aren't doing anything here yet
+
+    echo 'Testing 456';
+    # TODO: Definitely expand this
+    #  There needs to be some point to this file
+
+    echo 'Testing 789'
+    /*
+     * TODO: Echo a greeting instead
+     * This should work with or without the asterisk on each line
+     * labels: help wanted
+     */
+?>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/example_file.py b/example_file.py
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/example_file.py
@@ -0,0 +1,36 @@
+def hello_world():
+    # TODO: Come up with a more imaginative greeting
+    print('Hello world')
+
+    # [TODO]: Do more stuff
+    #  This function should probably do something more interesting
+    #  labels: help wanted
+
+def my_method(arg):
+    """
+    TODO: Second multiline comment
+    also need to be turned into task, and hopefully
+    kept together as one.
+    """
+    pass
+
+def MyClass:
+    '''
+    TODO: Third multiline comment
+    also need to be turned into task, and hopefully
+    kept together as one.
+    '''
+    pass
+
+"""
+The docstring documentation of MyClass
+
+Using a docstring in order to generate autodocumentation
+"""
+def SuffixAdder:
+  def __init__(self, base_str):
+    self.base_str=base_str
+
+  def add_suffix(self, suffix):
+    # add the suffix after the base string
+    return self.base_str + suffix
\ No newline at end of file
diff --git a/example.hs b/example.hs
new file mode 100644
index 0000000..0ce9b1a
--- /dev/null
+++ b/example.hs
@@ -0,0 +1,14 @@
+-- | Standard devices that are always installed.
+--
+-- TODO: Remove standard devices
+--   In the future, make a way to build these and just start the base
+--   out with a large supply of each?
+--   labels: redesign
+stdDeviceList =
+  ["treads", "grabber", "solar panel", "scanner", "plasma cutter"]
+
+{- | Very complicated function.
+
+TODO: Create an issue for TODO
+-}
+sum a b = a + b
diff --git a/example_file.cr b/example_file.cr
new file mode 100644
index 0000000..e6da2ec
--- /dev/null
+++ b/example_file.cr
@@ -0,0 +1,6 @@
+# TODO: Come up with a more imaginative greeting
+puts "Greetings"
+
+# TODO: Do even more stuff
+# This function should probably do something more interesting
+# labels: help wanted
diff --git a/example_file.rb b/example_file.rb
new file mode 100644
index 0000000..e6da2ec
--- /dev/null
+++ b/example_file.rb
@@ -0,0 +1,14 @@
+#!/usr/bin/ruby -w
+
+# TODO: Come up with a more imaginative greeting
+puts "Greetings"
+
+=begin
+TODO: Do more stuff
+This function should probably do something more interesting
+labels: help wanted
+=end
+
+# TODO: Do even more stuff
+# This function should probably do something more interesting
+# labels: help wanted
diff --git a/example_file.yaml b/example_file.yaml
new file mode 100644
index 0000000..6397789
--- /dev/null
+++ b/example_file.yaml
@@ -0,0 +1,7 @@
+name: "TODO to Issue"
+# TODO: Write a more interesting description
+description: "Converts IDE TODO comments to GitHub issues"
+author: "Alastair Mooney"
+# TODO: Define inputs
+#  Need to do this before the action is released
+#  labels: urgent
diff --git a/example_file.toml b/example_file.toml
new file mode 100644
index 0000000..6397789
--- /dev/null
+++ b/example_file.toml
@@ -0,0 +1,7 @@
+name = "TODO to Issue"
+# TODO: Write a more interesting description
+description = "Converts IDE TODO comments to GitHub issues"
+author = "Alastair Mooney"
+# TODO: Define inputs
+#  Need to do this before the action is released
+#  labels: urgent
diff --git a/example_file.prog.abap b/example_file.prog.abap
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.prog.abap
@@ -0,0 +1,5 @@
+REPORT ztest_todo_2.
+
+DATA moo TYPE i VALUE 2.
+WRITE moo. " TODO This is an end-of-line to-do
+moo = 4. * TODO This is another end-of-line to-do
diff --git a/example_file.sql b/example_file.sql
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.sql
@@ -0,0 +1,2 @@
+-- TODO Select all:
+SELECT * FROM Products;
diff --git a/example_file.tex b/example_file.tex
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.tex
@@ -0,0 +1,7 @@
+% TODO Add in preamble details
+\begin{document}
+  \begin{comment}
+     TODO This document needs content
+     label: urgent
+  \end{comment}
+\end{document}
diff --git a/example_file.jl b/example_file.jl
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.jl
@@ -0,0 +1,6 @@
+ # TODO: Hopefully this comment turns into an issue
+ print("Hello World")
+ #= TODO: Multiline comments
+   also need to be turned into task, and hopefully
+   kept together as one.
+ =#
diff --git a/defs.bzl b/defs.bzl
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/defs.bzl
@@ -0,0 +1,8 @@
+def hello_world():
+    # TODO: Come up with a more imaginative greeting
+    print('Hello world')
+
+    # TODO: Do more stuff
+    #  This function should probably do something more interesting
+    #  labels: help wanted
+    pass
diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,8 @@
+def hello_world():
+    # TODO: Come up with a more imaginative greeting
+    print('Hello world')
+
+    # TODO: Do more stuff
+    #  This function should probably do something more interesting
+    #  labels: help wanted
+    pass
diff --git a/example_file.ahk b/example_file.ahk
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.ahk
@@ -0,0 +1,2 @@
+ ; TODO: Find a better way to manage hotkeys
+ ; Maybe just switch to vim??
+ #h::
+ RegRead, HiddenFiles_Status, HKEY_CURRENT_USER, Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced, Hidden
diff --git a/example_file.hbs b/example_file.hbs
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.hbs
@@ -0,0 +1,5 @@
+ <!-- TODO: Hopefully this comment turns into a todo issue -->
+ {{!
+   TODO: Make a handlebar templtate
+    This is really just a test, but hopefully this works~!
+ }}
diff --git a/example_file.org b/example_file.org
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.org
@@ -0,0 +1,9 @@
+ # TODO: Hopefully this comment turns into a todo issue
+ #+begin_src python
+ print("Hello World")
+ #+end_src
+ #+begin_comment
+  TODO: Multiline comments
+   also need to be turned into todos, and hopefully
+   kept together as one todo
+ #+end_comment
diff --git a/example_file.scss b/example_file.scss
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.scss
@@ -0,0 +1,11 @@
+// TODO: Hopefully this comment turns into a todo issue
+.my-class {
+  font-weight: bold;
+  .my-second-class {
+    /* TODO: Multiline comments
+     * also need to be turned into todos, and hopefully
+     * kept together as one todo
+     */
+    text-align: center;
+  }
+}
diff --git a/example_file.twig b/example_file.twig
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.twig
@@ -0,0 +1,6 @@
+ {# TODO: Hopefully this comment turns into a todo issue #}
+ {#
+   TODO:Multiline comments
+   also need to be turned into todos, and hopefully
+   kept together as one todo
+ #}
diff --git a/example_file.md b/example_file.md
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.md
@@ -0,0 +1,7 @@
+ {/* TODO: Hopefully this comment turns into a todo issue */}
+ {/*
+   TODO:Multiline comments
+   also need to be turned into todos, and hopefully
+   kept together as one todo
+ */}
+ - [ ] TODO: An inline todo that's NOT a comment (what)
diff --git a/example_file.mdx b/example_file.mdx
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.mdx
@@ -0,0 +1,7 @@
+ {/* TODO: Hopefully this comment turns into a todo issue */}
+ {/*
+   TODO:Multiline comments
+   also need to be turned into todos, and hopefully
+   kept together as one todo
+ */}
+ - [ ] TODO: An inline todo that's NOT a comment (what)
diff --git a/example_file.r b/example_file.r
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/example_file.r
@@ -0,0 +1,8 @@
+hello_world <- function() {
+    # TODO: Come up with a more imaginative greeting
+    message("Hello world")
+
+    # TODO: Do more stuff
+    #  This function should probably do something more interesting
+    #  labels: help wanted
+}
diff --git a/example_file.rmd b/example_file.rmd
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/example_file.rmd
@@ -0,0 +0,1 @@
+<!-- TODO: Check RMarkdown comments work -->
diff --git a/example_file.qmd b/example_file.qmd
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/example_file.qmd
@@ -0,0 +0,1 @@
+<!-- TODO: Check RMarkdown comments work -->
diff --git a/example.clj b/example.clj
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/example.clj
@@ -0,0 +1,8 @@
+(ns example)
+
+(defn function-test [name]
+  ;; TODO: first todo to test parser
+  (prn (str "hello" name))
+  ;; TODO: todo with description (sub-level)
+  ;;  Body of the issue should stay here
+  (str "hello" name))
diff --git a/example.gd b/example.gd
new file mode 100644
index 0000000..525e25d
--- /dev/null
+++ b/example.gd
@@ -0,0 +1,5 @@
+# TODO Store all the players here
+var _players: = []
+
+# TODO Play the level music
+export: var music_path: String
diff --git a/example.nix b/example.nix
new file mode 100644
index 0000000..a6c6cb0
--- /dev/null
+++ b/example.nix
@@ -0,0 +1,11 @@
+{
+  # TODO add missing devices
+  stdDeviceList = [
+    "treads"
+    "grabber"
+  ];
+  /*
+    TODO add missing c
+  */
+  sum = a: b: a + b;
+}
diff --git a/example.xaml b/example.xaml
new file mode 100644
index 0000000..a6c6cb0
--- /dev/null
+++ b/example.xaml
@@ -0,0 +1,4 @@
+<!-- TODO: Add xaml support -->
+<Label Text="why"/>
+<!-- TODO: please -->
+<Label Text="ok"/>
diff --git a/example.cu b/example.cu
new file mode 100644
index 0000000..a6c6cb0
--- /dev/null
+++ b/example.cu
@@ -0,0 +1,8 @@
+
+// TODO rename this function
+__global__ void test() {
+    /*
+    TODO fill this with something useful
+    */
+}
+
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..2996176
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,12 @@
+# TODO change name.
+NAME = asm
+
+# TODO source files must be explicitly named.
+SRC = $(shell find mandatory/src -name "*.asm")
+OBJ = $(patsubst src/%.asm, obj/%.o, $(SRC))
+.PHONY: all
+all: $(NAME)
+$(NAME): $(OBJ)
+	# TODO create the directory.
+	$(AR) rc $@ $(OBJ)
+
diff --git a/example_file.liquid b/example_file.liquid
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.liquid
@@ -0,0 +1,11 @@
+{% comment %} TODO: remove loop logic {% endcomment %}
+{% for i in (1..3) -%}
+ # TODO: Do math here!
+ # labels: help wanted
+  {{ i }}
+{% endfor %}
+{% comment %}
+TODO: Render Liquid file
+{% assign featured_product = all_products["product_handle"] %}
+{% render "product", product: featured_product %}
+{% endcomment %}
diff --git a/example_file.tsx b/example_file.tsx
new file mode 100644
index 0000000..7cccc5b
--- /dev/null
+++ b/example_file.tsx
@@ -0,0 +1,13 @@
+// TODO: rename component
+export default async function Component() {
+  /* TODO: Use state here
+  labels: client  */
+
+  return (
+    <div>
+      {/*
+       TODO: use styled component library
+      */}
+    </div>
+  );
+}
diff --git a/example.purs b/example.purs
new file mode 100644
index 0000000..0ce9b1a
--- /dev/null
+++ b/example.purs
@@ -0,0 +1,14 @@
+-- | Standard devices that are always installed.
+--
+-- TODO: Remove standard devices
+--   In the future, make a way to build these and just start the base
+--   out with a large supply of each?
+--   labels: redesign
+stdDeviceList =
+  ["treads", "grabber", "solar panel", "scanner", "plasma cutter"]
+
+{- | Very complicated function.
+
+TODO: Create an issue for TODO
+-}
+sum a b = a + b
diff --git a/example.agda b/example.agda
new file mode 100644
index 0000000..0ce9b1a
--- /dev/null
+++ b/example.agda
@@ -0,0 +1,14 @@
+-- | Standard devices that are always installed.
+--
+-- TODO: Remove standard devices
+--   In the future, make a way to build these and just start the base
+--   out with a large supply of each?
+--   labels: redesign
+stdDeviceList =
+  ["treads", "grabber", "solar panel", "scanner", "plasma cutter"]
+
+{- | Very complicated function.
+
+TODO: Create an issue for TODO
+-}
+sum a b = a + b
diff --git a/init.lua b/init.lua
new file mode 100644
index 0000000..0ce9b1a
--- /dev/null
+++ b/init.lua
@@ -0,0 +1,11 @@
+-- TODO: Fix this
+--   In the future, make a way to build these and just start the base
+--   out with a large supply of each
+--   labels: redesign
+local a = 1
+
+--[[
+  TODO: Fix this todo
+  labels: urgent
+--]]
+local b = 2
diff --git a/Counter.sol b/Counter.sol
new file mode 100644
index 0000000..d340f6a
--- /dev/null
+++ b/Counter.sol
@@ -0,0 +1,20 @@
+contract Counter {
+    // TODO: Test this
+    //  Do it
+    // labels: urgent
+
+    /// TODO: Natspec comment
+    ///  Do it
+    /// labels: urgent
+
+    /*
+    TODO: Test this too
+    Do it ASAP
+    labels: urgent
+    */
+
+    /**
+    * TODO: And this too
+    * labels: urgent
+    */
+}
--- /dev/null
+++ b/package.move
@@ -0,0 +1,20 @@
+module coin::coin {
+    // TODO: Test this
+    //  Do it
+    // labels: urgent
+
+    /// TODO: Natspec comment
+    ///  Do it
+    /// labels: urgent
+
+    /*
+    TODO: Test this too
+    Do it ASAP
+    labels: urgent
+    */
+
+    /**
+    * TODO: And this too
+    * labels: urgent
+    */
+}
diff --git a/src/Dockerfile b/src/Dockerfile
new file mode 100644
index 0000000..d340f6a
--- /dev/null
+++ b/Dockerfile
@@ -0,0 +1,4 @@
+WORKDIR /app
+ENV PYTHONPATH /app
+# TODO: Update command
+CMD ["/app/main.py"]
